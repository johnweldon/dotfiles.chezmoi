#!/usr/bin/env bash

function dot_env() {
  set -a
  [ -f ".env" ] && source ".env"
  set +a
}

function start_ssh_agent() {
  [ -f "{{ .chezmoi.homedir }}/.ssh/agent.pid" ] && source "{{ .chezmoi.homedir }}/.ssh/agent.pid" >/dev/null 2>&1
  if [ -z "${SSH_AGENT_PID}" ] || [ "$(ps -p "${SSH_AGENT_PID}" -o comm=)" != "ssh-agent" ]; then
    echo "cleanup and restart ssh-agent"
    [ -f "{{ .chezmoi.homedir }}/.ssh/agent.pid" ] && rm -f "{{ .chezmoi.homedir }}/.ssh/agent.pid"
    ssh-agent >"{{ .chezmoi.homedir }}/.ssh/agent.pid"
    source "{{ .chezmoi.homedir }}/.ssh/agent.pid"
  fi
}

function do_each_repo() {
  for r in $(find . -type d -name .git -exec dirname {} \;); do
    echo -e "Entering $r\n--------\n"
    (
      cd $r
      git status
      git remote -v
    )
    echo -e "\nAbout to: $*"
    read -p "Proceed? " -r -n 1 selection
    echo
    case "$selection" in
    q | Q | x | X) return 255 ;;
    y | Y) (
      cd $r
      eval "$@"
    ) ;;
    *) echo -e "\nskipping" ;;
    esac
    echo -e "\n--------"
  done
}

function do_on_my_servers() {
  for h in ${MY_SERVERS:-localhost}; do
    echo -e "\n\n\tConnecting to $h\n\t----------\n"
    ssh -t "$h" "$@"
  done
}

function random_string() {
  LC_ALL=C tr -dc "[:alnum:]" </dev/urandom | fold -w "${1:-32}" | head -n 1
  #>
}

function gi() {
  first=$1
  [ "$1" != "" ] && [ "${1:0:1}" == 't' ] && first=${1:1}
  shift
  eval "git $first $*"
}

function pusdh() {
  eval "pushd $*"
}

function didfile() {
  [[ -z "$1" ]] &&
    local WORKING_DATE="$(date +%Y-%m-%d)" ||
    local WORKING_DATE="$(date -v${1} +%Y-%m-%d)"

  local DID_FOLDER="${NOTES_FOLDER}"
  [ -z "${DID_FOLDER}" ] || [ -d "${DID_FOLDER}" ] || mkdir -p "${DID_FOLDER}"
  echo "${DID_FILE:-${DID_FOLDER:-~}/${WORKING_DATE}.did}"
}

function did() {
  DID_FOLDER="${NOTES_FOLDER}"
  [ -z "${DID_FOLDER}" ] || [ -d "${DID_FOLDER}" ] || mkdir -p "${DID_FOLDER}"
  DID_MESSAGE="$*" vim "$(didfile)"
  today
}

function today() {
  cat "$(didfile)"
}

function yesterday() {
  cat "$(didfile "-1d")"
}

function setprompt() {
  local escon="\[\033["
  local escoff="\]"

  local fg_black="${escon}0;30m${escoff}"
  local fg_red="${escon}0;31m${escoff}"
  local fg_green="${escon}0;32m${escoff}"
  local fg_brown="${escon}0;33m${escoff}"
  local fg_blue="${escon}0;34m${escoff}"
  local fg_purple="${escon}0;35m${escoff}"
  local fg_cyan="${escon}0;36m${escoff}"
  local fg_lgray="${escon}0;37m${escoff}"
  local fg_dgray="${escon}1;30m${escoff}"
  local fg_lred="${escon}1;31m${escoff}"
  local fg_lgreen="${escon}1;32m${escoff}"
  local fg_yellow="${escon}1;33m${escoff}"
  local fg_lblue="${escon}1;34m${escoff}"
  local fg_lpurple="${escon}1;35m${escoff}"
  local fg_lcyan="${escon}1;36m${escoff}"
  local fg_lgray="${escon}1;37m${escoff}"

  local bg_black="${escon}0;40m${escoff}"
  local bg_red="${escon}0;41m${escoff}"
  local bg_green="${escon}0;42m${escoff}"
  local bg_brown="${escon}0;43m${escoff}"
  local bg_blue="${escon}0;44m${escoff}"
  local bg_purple="${escon}0;45m${escoff}"
  local bg_cyan="${escon}0;46m${escoff}"
  local bg_lgray="${escon}0;47m${escoff}"
  local bg_dgray="${escon}1;40m${escoff}"
  local bg_lred="${escon}1;41m${escoff}"
  local bg_lgreen="${escon}1;42m${escoff}"
  local bg_yellow="${escon}1;43m${escoff}"
  local bg_lblue="${escon}1;44m${escoff}"
  local bg_lpurple="${escon}1;45m${escoff}"
  local bg_lcyan="${escon}1;46m${escoff}"
  local bg_lgray="${escon}1;47m${escoff}"

  local fg_default="${escon}0;39m${escoff}"
  local bg_default="${escon}0;49m${escoff}"

  local promptstr='$ '
  if [ "X${UID}" == "X0" ]; then local promptstr=${fg_red}'# '${fg_default}; fi

  local user=${fg_lcyan}'$CURRENT_USER{'${fg_lpurple}'$UID'${fg_lcyan}'}'${fg_default}
  local host='@'${fg_green}'$CURRENT_HOST'${fg_default}
  local path=' ('${fg_yellow}'\w'${fg_default}')'

  local line1='\n'${user}${host}${path}${line2}
  local line2='\n'${fg_lpurple}'\t [$?]('${fg_lgreen}${SHLVL}${fg_lpurple}') '${promptstr}

  export PS1=${line1}${line2}${bg_default}${fg_default}
  export PS2=${fg_red}'+ '${fg_default}
}
